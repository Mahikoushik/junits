package com.eaton.platform.core.workflows;

import com.adobe.granite.workflow.WorkflowSession;
import com.adobe.granite.workflow.exec.WorkItem;
import com.adobe.granite.workflow.metadata.MetaDataMap;
import io.wcm.testing.mock.aem.junit5.AemContext;
import io.wcm.testing.mock.aem.junit5.AemContextExtension;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import javax.jcr.Node;

import static org.junit.jupiter.api.Assertions.assertEquals;

@ExtendWith(AemContextExtension.class)
class EPSDensityDeciderTest {

    private final AemContext context = new AemContext();
    private EPSDensityDecider epsDensityDecider;

    private static final String TEST_ASSET_PATH = "/content/dam/test-asset";
    private static final String TEST_METADATA_PATH = TEST_ASSET_PATH + "/jcr:content/metadata";

    @BeforeEach
    void setUp() {
        epsDensityDecider = new EPSDensityDecider();

        // Create asset and metadata structure
        context.create().resource(TEST_METADATA_PATH, "xmp:eaton-content-type", "eaton:resources/technical-resources/drawings");
    }

    @Test
    void testExecute_Density1000() throws Exception {
        // Set up mock workflow item and session
        WorkItem workItem = context.resourceResolver().adaptTo(WorkItem.class); // Use adaptTo correctly
        WorkflowSession workflowSession = context.resourceResolver().adaptTo(WorkflowSession.class); // Use adaptTo on resource resolver
        MetaDataMap metaDataMap = context.create().resource(TEST_ASSET_PATH).adaptTo(MetaDataMap.class);

        // Execute workflow
        epsDensityDecider.execute(workItem, workflowSession, metaDataMap);

        // Validate metadata map updates
        assertEquals(EPSDensityDecider.DENSITY_1000, metaDataMap.get(EPSDensityDecider.DENSITY_DECISION));
    }

    @Test
    void testExecute_Density300() throws Exception {
        // Update content type for a different test case
        Node metadataNode = context.resourceResolver().getResource(TEST_METADATA_PATH).adaptTo(Node.class);
        metadataNode.setProperty("xmp:eaton-content-type", "eaton:resources/marketing-resources/illustrations");
        context.resourceResolver().commit();

        // Set up mock workflow item and session
        WorkItem workItem = context.resourceResolver().adaptTo(WorkItem.class); // Correct use of adaptTo
        WorkflowSession workflowSession = context.resourceResolver().adaptTo(WorkflowSession.class); // Correct use of adaptTo
        MetaDataMap metaDataMap = context.create().resource(TEST_ASSET_PATH).adaptTo(MetaDataMap.class);

        // Execute workflow
        epsDensityDecider.execute(workItem, workflowSession, metaDataMap);

        // Validate metadata map updates
        assertEquals(EPSDensityDecider.DENSITY_300, metaDataMap.get(EPSDensityDecider.DENSITY_DECISION));
    }
}
